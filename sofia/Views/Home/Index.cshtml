@model IEnumerable<sofia.ViewModels.AdminViewModel>
@{
    ViewData["Title"] = "Home Page";
}

<script src="https://api-maps.yandex.ru/2.1/?apikey=e439331b-cf6a-4f7b-ace5-8d16e2af975e&lang=ru_RU" type="text/javascript"></script>
<body>
		<div id="map"></div>
	
</body>
@section Scripts{ 
	<script type="text/javascript">
		// Функция ymaps.ready() будет вызвана, когда
		// загрузятся все компоненты API, а также когда будет готово DOM-дерево.

        let array = @Html.Raw(Json.Serialize(Model));
        console.log(array);

        ymaps.ready(init);
		function init() {

			$('#map').width($(window).width());
			$('#map').height($(window).height());
			$(window).resize(function(){
				$('#map').width($(window).width());
    			$('#map').height($(window).height());
			});
			// Создание карты.
			var myPlacemark,
			myMap = new ymaps.Map('map', {
				center: [55.64641406974802,37.50272540389724],
				zoom: 11
			}, {
				searchControlProvider: 'yandex#search'
                });
            array.forEach(el => {
                let mas = el.coords.split(',');
                let placemark = new ymaps.Placemark([mas[0], mas[1]], {
                    balloonContent: '<img class="card-img-top img-fluid" src="data:image/jpeg;base64,'+ el.photo.toString() +'" /><h4>'+ el.name +'<h4><hr><p>'+ el.about +'</p><h4 class="text-right text-success">'+ el.price +'руб</h4><a href="/Home/Info?id='+el.id+'" target="_blank" class="btn btn-info">Подробнее</a>'
                });
                myMap.geoObjects.add(placemark);
            });
            

		

    // Создание метки.
    function createPlacemark(coords) {
        return new ymaps.Placemark(coords, {
            iconCaption: 'поиск...'
        }, {
            preset: 'islands#violetDotIconWithCaption',
            draggable: true
        });
    }

    // Определяем адрес по координатам (обратное геокодирование).
    function getAddress(coords) {
        myPlacemark.properties.set('iconCaption', 'поиск...');
        ymaps.geocode(coords).then(function (res) {
			var firstGeoObject = res.geoObjects.get(0);
			console.log(firstGeoObject);

            myPlacemark.properties
                .set({
                    // Формируем строку с данными об объекте.
                    iconCaption: [
                        // Название населенного пункта или вышестоящее административно-территориальное образование.
                        firstGeoObject.getLocalities().length ? firstGeoObject.getLocalities() : firstGeoObject.getAdministrativeAreas(),
                        // Получаем путь до топонима, если метод вернул null, запрашиваем наименование здания.
                        firstGeoObject.getThoroughfare() || firstGeoObject.getPremise()
                    ].filter(Boolean).join(', '),
                    // В качестве контента балуна задаем строку с адресом объекта.
                    balloonContent: firstGeoObject.getAddressLine()
                });
        });
    }
		}

	</script>
}
