@{
    ViewData["Title"] = "Home Page";
}

<script src="https://api-maps.yandex.ru/2.1/?apikey=e439331b-cf6a-4f7b-ace5-8d16e2af975e&lang=ru_RU" type="text/javascript"></script>
<body>
		<div id="map"></div>
	
</body>
@section Scripts{ 
	<script type="text/javascript">
		// Функция ymaps.ready() будет вызвана, когда
		// загрузятся все компоненты API, а также когда будет готово DOM-дерево.
		ymaps.ready(init);
		function init() {

			$('#map').width($(window).width());
			$('#map').height($(window).height());
			$(window).resize(function(){
				$('#map').width($(window).width());
    			$('#map').height($(window).height());
			});
			// Создание карты.
			var myPlacemark,
			myMap = new ymaps.Map('map', {
				center: [55.753994, 37.622093],
				zoom: 9
			}, {
				searchControlProvider: 'yandex#search'
			});
			myMap.events.add('click', function (e) {
        var coords = e.get('coords');

        // Если метка уже создана – просто передвигаем ее.
        if (myPlacemark) {
            myPlacemark.geometry.setCoordinates(coords);
        }
        // Если нет – создаем.
        else {
            myPlacemark = createPlacemark(coords);
            myMap.geoObjects.add(myPlacemark);
            // Слушаем событие окончания перетаскивания на метке.
            myPlacemark.events.add('dragend', function () {
                getAddress(myPlacemark.geometry.getCoordinates());
            });
        }
        getAddress(coords);
    });

    // Создание метки.
    function createPlacemark(coords) {
        return new ymaps.Placemark(coords, {
            iconCaption: 'поиск...'
        }, {
            preset: 'islands#violetDotIconWithCaption',
            draggable: true
        });
    }

    // Определяем адрес по координатам (обратное геокодирование).
    function getAddress(coords) {
        myPlacemark.properties.set('iconCaption', 'поиск...');
        ymaps.geocode(coords).then(function (res) {
			var firstGeoObject = res.geoObjects.get(0);
			console.log(firstGeoObject);

            myPlacemark.properties
                .set({
                    // Формируем строку с данными об объекте.
                    iconCaption: [
                        // Название населенного пункта или вышестоящее административно-территориальное образование.
                        firstGeoObject.getLocalities().length ? firstGeoObject.getLocalities() : firstGeoObject.getAdministrativeAreas(),
                        // Получаем путь до топонима, если метод вернул null, запрашиваем наименование здания.
                        firstGeoObject.getThoroughfare() || firstGeoObject.getPremise()
                    ].filter(Boolean).join(', '),
                    // В качестве контента балуна задаем строку с адресом объекта.
                    balloonContent: firstGeoObject.getAddressLine()
                });
        });
    }
		}

	</script>
}
